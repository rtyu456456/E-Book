<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fp.eb.mapper.MainMapper">

	<!-- 좋아요 / 싫어요 개수 -->
	<select id="likeDislikeCount" resultType="map" >
	select
		(select count(*) from eb_like_record, 
	<if test="lr_where_type == 'REVIEW'">
		eb_review
		where lr_where_no = r_no
	</if>
	<if test="lr_where_type == 'CP'">
		eb_community_post
		where lr_where_no = cp_no
	</if>
		and lr_where_type = #{lr_where_type} and lr_type = 1 and lr_where_no = #{lr_where_no}
		) as like_count,
		(select count(*) from eb_like_record, 
	<if test="lr_where_type == 'REVIEW'">
		eb_review
		where lr_where_no = r_no
	</if>
	<if test="lr_where_type == 'CP'">
		eb_community_post
		where lr_where_no = cp_no
	</if>	
		
		and lr_where_type = #{lr_where_type} and lr_type = 2 and lr_where_no = #{lr_where_no}
		) as dislike_count
	from dual
	</select>

	<select id="likeCheck" resultType="String">
		select lr_type from eb_like_record
		where lr_owner = #{lr_owner} and lr_where_type = #{lr_where_type} and
		lr_where_no = #{lr_where_no}
	</select>



	<!-- 검색 -->
	<select id="bookSearch" resultType="com.fp.eb.model.BookDTO">
		<if test="searchOption == 'b_title'">
			select * from eb_book where b_title like '%'||
			#{searchText}||'%'
		</if>
		<if test="searchOption == 'b_authors'">
			select * from eb_book where b_authors like '%'||
			#{searchText}||'%'
		</if>
	</select>

	<!-- 상세 -->
	<select id="bookDetail" resultType="com.fp.eb.model.BookDTO">
		select * from eb_book where
		b_no = #{b_no}
	</select>

	<!-- 상세 서평 -->
	<select id="reviews" resultType="com.fp.eb.model.ReviewDTO">
		select * from eb_review,
		eb_book, eb_user
		where r_b_no = b_no and b_no=#{b_no} and u_id =
		r_owner
		order by r_date desc
	</select>


	<!-- 기타 기능 -->
	<select id="getLikeInfo" resultType="com.fp.eb.model.LikeDTO">
		select * from EB_LIKE_RECORD
		where LR_OWNER = #{lr_owner} and LR_WHERE_TYPE = #{lr_where_type} and
		LR_WHERE_NO = #{lr_where_no}
	</select>

	<insert id="insertLike">
		insert into eb_like_record
		values(eb_like_record_seq.nextval,
		#{lr_owner},#{lr_where_type},#{lr_where_no}, #{lr_type}, to_char(current_date-1, 'YYMMDD'))
	</insert>

	<update id="updateLike">
		update eb_like_record
		set lr_type = #{lr_type}
		where
		LR_OWNER = #{lr_owner} and LR_WHERE_TYPE = #{lr_where_type} and
		LR_WHERE_NO = #{lr_where_no}
	</update>

	<select id="getPercent" resultType="com.fp.eb.model.BookDTO">
		SELECT
		r_b_no,
		COUNT(*) AS
		total_reviews,
		SUM(CASE WHEN r_type = 1 THEN 1 ELSE 0 END) AS
		positive_reviews,
		(CASE WHEN COUNT(*) = 0 THEN 0 ELSE (SUM(CASE WHEN
		r_type = 1 THEN 1 ELSE 0
		END) / COUNT(*)) * 100 END) AS
		positive_percentage
		FROM
		eb_review
		WHERE
		r_b_no = #{b_no}
		GROUP BY
		r_b_no
	</select>

	<!-- 화제의 도서 -->
	<select id="hotBooks" resultType="com.fp.eb.model.BookDTO">
		SELECT B.B_NO, B.B_THUMBNAIL,
		(SELECT COUNT(*) FROM EB_REVIEW R
		WHERE R.R_B_NO
		= B.B_NO
		AND R.R_TYPE = 1) AS COUNT_LIKE
		FROM EB_BOOK B
		JOIN EB_REVIEW R
		ON B.B_NO = R.R_B_NO
		WHERE R.R_DATE >= TO_CHAR(CURRENT_DATE - 30,
		'YYMMDD')
		AND R.R_TYPE = 1
		GROUP BY B.B_NO, B.B_THUMBNAIL
		ORDER BY
		COUNT_LIKE DESC
		FETCH FIRST 3 ROW ONLY
	</select>

	<!-- 오늘의 베스트 서평 -->
	<select id="dailyBest" resultType="com.fp.eb.model.ReviewDTO">
		select * from eb_review
		where
		r_date >= to_char(current_date-1, 'YYMMDD')
		order by r_like DESC
		fetch
		first 1 rows only
	</select>
	<select id="dailyBook" resultType="com.fp.eb.model.BookDTO">
		select * from eb_book,
		eb_review
		where b_no = r_b_no
		and r_date >= to_char(current_date-1,
		'YYMMDD')
		order by r_like DESC
		fetch first 1 rows only
	</select>
	<select id="dailyUser" resultType="com.fp.eb.model.UserDTO">
		select * from eb_user,
		eb_review
		where u_id = r_owner
		and r_date >= to_char(current_date-1,
		'YYMMDD')
		order by r_like DESC
		fetch first 1 rows only
	</select>


	<!-- 이번주 베스트 서평 -->
	<select id="weeklyBest" resultType="com.fp.eb.model.ReviewDTO">
		select * from eb_review
		where
		r_date >= to_char(current_date-7, 'YYMMDD')
		order by r_like DESC
		fetch
		first 1 rows only
	</select>
	<select id="weeklyBook" resultType="com.fp.eb.model.BookDTO">
		select * from eb_book,
		eb_review
		where b_no = r_b_no
		and r_date >= to_char(current_date-7,
		'YYMMDD')
		order by r_like DESC
		fetch first 1 rows only
	</select>
	<select id="weeklyUser" resultType="com.fp.eb.model.UserDTO">
		select * from eb_user,
		eb_review
		where u_id = r_owner
		and r_date >= to_char(current_date-7,
		'YYMMDD')
		order by r_like DESC
		fetch first 1 rows only
	</select>


	<!-- 이번달 베스트 서평 -->
	<select id="monthlyBest" resultType="com.fp.eb.model.ReviewDTO">
		select * from eb_review
		where r_date >= to_char(current_date-30, 'YYMMDD')
		order by r_like DESC
		fetch first 1 rows only
	</select>
	<select id="monthlyBook" resultType="com.fp.eb.model.BookDTO">
		select * from eb_book,
		eb_review
		where b_no = r_b_no
		and r_date >= to_char(current_date-30,
		'YYMMDD')
		order by r_like DESC
		fetch first 1 rows only
	</select>
	<select id="monthlyUser" resultType="com.fp.eb.model.UserDTO">
		select * from eb_user,
		eb_review
		where u_id = r_owner
		and r_date >= to_char(current_date-30,
		'YYMMDD')
		order by r_like DESC
		fetch first 1 rows only
	</select>
</mapper>